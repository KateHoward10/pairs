{"version":3,"sources":["sound sync /^/.//.*/.mp3$","sound/gb.mp3","sound/🌶️.mp3","sound/🍄.mp3","sound/🍅.mp3","sound/🥔.mp3","sound/🥕.mp3","sound/🥦.mp3","sound/🥬.mp3","gb.jpeg","hooks/useInterval.js","components/Button/styles.js","components/Button/index.js","components/Grid/index.js","levels.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Wrapper","styled","button","props","visible","css","Inner","div","Front","Back","highlighted","Audio","audio","Image","img","Button","index","value","level","selectItem","sound","require","pic","_audio","HTMLAudioElement","Fragment","onClick","play","src","alt","ref","c","Grid","size","levels","App","useState","itemOrder","setItemOrder","allItemsVisible","toggleAllItemsVisible","solved","setSolved","currentPair","setCurrentPair","status","setStatus","time","setTime","setLevel","levelSelecter","toggleLevelSelecter","length","className","style","color","Math","floor","onChange","target","key","items","sort","random","item","includes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e141d751.chunk.js","sourcesContent":["var map = {\n\t\"./gb.mp3\": 26,\n\t\"./🌶️.mp3\": 27,\n\t\"./🍄.mp3\": 28,\n\t\"./🍅.mp3\": 29,\n\t\"./🥔.mp3\": 30,\n\t\"./🥕.mp3\": 31,\n\t\"./🥦.mp3\": 32,\n\t\"./🥬.mp3\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;","module.exports = __webpack_public_path__ + \"static/media/gb.aa54a71d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/🌶️.559fcd80.mp3\";","module.exports = __webpack_public_path__ + \"static/media/🍄.77ad066f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/🍅.079d207c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/🥔.86b9e5fe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/🥕.3b210c46.mp3\";","module.exports = __webpack_public_path__ + \"static/media/🥦.c0a30f44.mp3\";","module.exports = __webpack_public_path__ + \"static/media/🥬.9c24decd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gb.58e9d8a0.jpeg\";","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import styled, { css } from 'styled-components';\n\nexport const Wrapper = styled.button`\n  background: grey;\n  perspective: 1000px;\n  outline: none;\n  border: 1px solid grey;\n  padding: 0;\n  ${props =>\n    props.visible &&\n    css`\n      transform: rotateY(180deg);\n    `};\n`;\n\nexport const Inner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transition: transform 0.5s;\n  transform-style: preserve-3d;\n  ${props =>\n    props.visible &&\n    css`\n      transform: rotateY(180deg);\n    `};\n`;\n\nexport const Front = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: lightgrey;\n  backface-visibility: hidden;\n`;\n\nexport const Back = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: white;\n  backface-visibility: hidden;\n  font-size: 5vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotateY(180deg);\n  ${props =>\n    props.highlighted &&\n    css`\n      box-shadow: inset 0 0 5px gold;\n    `};\n`;\n\nexport const Audio = styled.audio`\n  display: none;\n`;\n\nexport const Image = styled.img`\n  width: 5vw;\n  height: 5vw;\n`;\n","import React from 'react';\nimport { Wrapper, Inner, Front, Back, Audio, Image } from './styles';\n\nfunction Button({ index, value, level, selectItem, highlighted, visible }) {\n  const sound = level === 0 ? require(`../../sound/${value}.mp3`) : null;\n  const pic = require('../../gb.jpeg');\n  let _audio = HTMLAudioElement;\n\n  function click() {\n    selectItem(index);\n    if (sound) _audio.play();\n  }\n\n  return (\n    <React.Fragment>\n      <Wrapper onClick={click} visible={visible}>\n        <Inner visible={visible}>\n          <Front />\n          <Back highlighted={highlighted}>{value === 'gb' ? <Image src={pic} alt=\"GREEEN BEEANS\" /> : value}</Back>\n        </Inner>\n      </Wrapper>\n      {sound && <Audio ref={c => (_audio = c)} src={sound} />}\n    </React.Fragment>\n  );\n}\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Grid = styled.div(\n  ({ size }) => `\n  display: grid;\n  grid-template-columns: repeat(${size}, ${80 / size}vw);\n  grid-template-rows: repeat(${size}, ${80 / size}vw);\n  border: 1px solid grey;\n  @media screen and (min-width: 700px) {\n    grid-template-rows: repeat(${size}, ${500 / size}px);\n    grid-template-columns: repeat(${size}, ${500 / size}px);\n  }\n`\n);\n\nexport default Grid;\n","export const levels = [\n\t['🥕', '🍅', '🥔', '🌶️', '🥬', '🥦', '🍄', 'gb'],\n\t['🌡️', '☂️', '❄️', '☀️', '🌈', '⛄', '⚡', '🌪️', '🌙', '🌤️', '🌧️', '☄️', '🔥', '🌊', '⭐', '🌁', '🛰️', '🍃'],\n\t[\n\t\t'🐒',\n\t\t'🐕',\n\t\t'🐅',\n\t\t'🦓',\n\t\t'🦌',\n\t\t'🐖',\n\t\t'🐑',\n\t\t'🐫',\n\t\t'🦙',\n\t\t'🦒',\n\t\t'🐘',\n\t\t'🐇',\n\t\t'🦔',\n\t\t'🦇',\n\t\t'🦘',\n\t\t'🐁',\n\t\t'🐓',\n\t\t'🦆',\n\t\t'🦉',\n\t\t'🦜',\n\t\t'🐢',\n\t\t'🐍',\n\t\t'🐳',\n\t\t'🐬',\n\t\t'🐠',\n\t\t'🦋',\n\t\t'🐌',\n\t\t'🐝',\n\t\t'🕷️',\n\t\t'🦀',\n\t\t'🦑',\n\t\t'🦠'\n\t]\n];\n","import React, { useState, useEffect } from 'react';\nimport useInterval from './hooks/useInterval';\nimport Button from './components/Button';\nimport Grid from './components/Grid';\nimport { levels } from './levels';\nimport './App.css';\n\nfunction App() {\n  const [itemOrder, setItemOrder] = useState([]);\n  const [allItemsVisible, toggleAllItemsVisible] = useState(false);\n  const [solved, setSolved] = useState([]);\n  const [currentPair, setCurrentPair] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [time, setTime] = useState(-1);\n  const [level, setLevel] = useState(0);\n  const [levelSelecter, toggleLevelSelecter] = useState(true);\n\n  function startGame() {\n    toggleLevelSelecter(false);\n    const items = levels[level];\n    setItemOrder([...items, ...items].sort(() => Math.random() - 0.5));\n    setSolved([]);\n    setCurrentPair([]);\n    setTime(-1);\n    toggleAllItemsVisible(true);\n    setStatus('playing');\n  }\n\n  function selectItem(index) {\n    if (currentPair.length <= 1) {\n      setCurrentPair([...currentPair, index]);\n      if (itemOrder[currentPair[0]] === itemOrder[index]) {\n        setSolved([...solved, currentPair[0], index]);\n      }\n    } else {\n      setCurrentPair([index]);\n    }\n  }\n\n  // Show items for one second when game begins\n  useInterval(() => toggleAllItemsVisible(false), allItemsVisible ? 1000 : null);\n\n  // Increment time\n  useInterval(() => setTime(time + 1), status === 'playing' ? 1000 : null);\n\n  useInterval(() => setCurrentPair([]), currentPair.length === 2 && currentPair[0] !== currentPair[1] ? 1000 : null);\n\n  // Check if all solved\n  useEffect(() => {\n    if (status === 'playing' && solved.length === itemOrder.length) {\n      setStatus('solved');\n    }\n  }, [status, solved, itemOrder]);\n\n  return (\n    <React.Fragment>\n      <div className=\"controls\">\n        <button className=\"play-button\" onClick={() => toggleLevelSelecter(true)}>\n          {status === 'playing' ? 'Restart' : status === 'solved' ? 'Play again' : 'Play'}\n        </button>\n        {time > 0 && (\n          <span style={{ color: status === 'solved' ? 'lime' : 'black' }}>\n            {Math.floor(time / 60) < 10 ? `0${Math.floor(time / 60)}` : Math.floor(time / 60)}:\n            {time % 60 < 10 ? `0${time % 60}` : time % 60}\n          </span>\n        )}\n        {levelSelecter && (\n          <div className=\"selecter-background\">\n            <div className=\"level-selecter\">\n              <div className=\"instructions\">\n                <span>🥕 + 🥕 ✔️</span>\n                <span>🥕 + 🥦 ❌</span>\n              </div>\n              <h3>Match the pairs as fast as you can!</h3>\n              <span>First, pick a level:</span>\n              <select onChange={e => setLevel(e.target.value)}>\n                {levels.map((level, index) => (\n                  <option key={index} value={index}>\n                    Level {index + 1}\n                  </option>\n                ))}\n              </select>\n              <button className=\"play-button\" onClick={startGame}>\n                Start\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n      <Grid size={level * 2 + 4}>\n        {itemOrder.map((item, index) => (\n          <Button\n            key={index}\n            index={index}\n            value={item}\n            level={level}\n            selectItem={selectItem}\n            highlighted={currentPair.includes(index)}\n            visible={allItemsVisible || currentPair.includes(index) || solved.includes(index)}\n          />\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}